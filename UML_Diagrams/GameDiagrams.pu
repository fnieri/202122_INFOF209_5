@startuml GameDiagrams

header Quoridor
title Game diagrams

enum pawnColors {
    'Fields
        Yellow
        Green
        Blue
        Purple
}


enum Orientation {
    'Fields
        Vertical
        Horizontal
    
}

class MainWindow {
    'Methods
        handleKeypress(key)
        display()
}

note right of MainWindow
MainWindow contains all 
visual components, such as 
the board and the score.
It also handles keyboardInput.
endnote

enum Direction {
    'Fields
        Down
        Up
        Left
        Right
}

class Player{
    'Fields
        Color : Color
        Position : Point
    'Methods
        move(Action)
    
}

note top of Player
A player can call 
move method,
which will create
an action and check
if it is valid.
endnote

class Wall{
    'Fields
        Position
        Orientation : Orientation
    'Methods
}

class Cell{
    'Fields
        Position : Point
        Occupied : bool
        OccupyingPlayer: nullptr if none
}

class playerBoard {
    'Fields
        Cells : Vector of cells   
} 

class wallBoard {
    'Fields
        Corridors : Vectors of corridors
        placedWalls : vector of Walls
}

class Board{
    'Fields
        playerBoard : playerBoard
        wallBoard : playerAction
}

note top of Board
Board contains both wall
and player boards.
The class must overlap
the two boards to allow 
them to be displayed.
endnote

class Action  {
    'Fields
        playerAction
    'Methods
        isActionValid(Action)  
        isWallPlacementLegal() : bool /' (inside board and on empty space) '/
        isWallPlacementValid() : bool /' (all players can still get to other side)'/

}


Board -d- MainWindow
playerBoard -l- Board
wallBoard -r- Board
Cell -l- playerBoard
Wall - wallBoard
' Player - Action
Player -d- playerBoard
Player -r- "1" pawnColors : > uses
Action -u- "1" Direction : > uses
Wall -u- "1" Orientation : > uses

@enduml