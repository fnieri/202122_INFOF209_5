@startuml UserSideDiagrams

class User {
    'Fields
        - username : string /' (Could also be guest so no username yet) '/
        - profilePicture : image
        - friendsList : vector of strings  /' (Could be empty if no friends. Story of my life :() '/
        - ELO : int
        - isLoggedIn : bool
    'Methods
        + << constructor >> User()
        +  << constructor >> User(username : string) 
        + getUsername() : string
        + setUsername() : string
        + getProfilePicture() : image
        + setProfilePicture()
        + getFriendsList() : vector of strings
        + getElo() : int
        + setElo()
        + logIn()
        + register()
        + logOut()
        + addFriend(username : string)
        + removeFriend(username : string)
        + sendMessage(message : Message)
        + inviteFriendToMatch()
        + joinFriendsMatch()
        + askToPauseMatch()
        + loadMatch()
        

}

class passwordEncrypter {
    'Fields
        - passwordToEncrypt : string
        - finalPassword : string
    'Methods
        +  << constructor >> passwordEncrypter(passwordToEncrypt : string)
        + hashingAlgorithm(password : string) : string 

}


class Leaderboard {
    'Fields
        - listOfUsers : vector of Users
    'Methods
        + getUsers() : vector of Users
        + sortBy()
        + filterBy()
}

class Message {
    'Fields
        - timeSent : chrono
        - sender : User
        - receiver : User
        - sentMessage : string or image 
    'Methods
        + << constructor >> Message(sentMessage : string or image,
         sender : User, receiver : User, timeSent : chrono)
        + getSentMessage() : string or image
        + getSender() : User
        + getReceiver() : User
        + getTimeSent() : chrono 
}

class gameChatBox {
    'Fields
        - usersConnected : vector of Users
        - messagesLog : text
    'Methods
        + receiveMessage()

}


class loginHandler {
    'Fields
        - username : string
        - password : string
    'Methods
        + login() 
}

class registerHandler {
    'Fields
        - email : string
        - username : string
        - password : string
    'Methods
        + register()
}

class MainMenu {
    'Fields
        - loggedUser : User
    'Methods
        + choosePlayMod() : Button
        + play(mod : string)
        + userDropDownChoice() : Button
        + showLeaderboard() : Button
}
gameChatBox ---* "*" Message  
gameChatBox "0..1" --- "1..*" User   : > contains
Leaderboard --- "*" User : > contains 
loginHandler --- passwordEncrypter : > uses
registerHandler --- passwordEncrypter : > uses
@enduml